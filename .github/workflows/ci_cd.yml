name: Android CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:
    inputs:
      release_notes:
        type: string
        required: true
        default: 'Manual Debug Build'
        description: 'Release Notes'

jobs:
  build:
    permissions:
      contents: read
    name: Building and distributing app
    runs-on: ubuntu-latest

    outputs:
      apk-path: ${{ steps.build_apk.outputs.apk_path }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Create local.properties
        run: echo "sdk.dir=$ANDROID_HOME" > local.properties

      - name: Create secret.properties for API keys
        run: |
         echo "API_KEY=${{ secrets.DEBUG_API_KEY }}" > secret.properties
         echo "EXCHANGE_RATE_API_KEY=${{ secrets.EXCHANGE_RATE_API_KEY }}" >> secret.properties

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Lint (Android Lint)
        run: ./gradlew lintDebug -Pandroid.lint.options.checkReleaseBuilds=true -Pandroid.lint.options.abortOnError=true

      - name: KtLint
        run: ./gradlew ktlintCheck

      - name: Detekt
        run: ./gradlew detekt

      - name: Build Debug APK
        id: build_apk
        run: |
          ./gradlew assembleDebug
          echo "apk_path=app/build/outputs/apk/debug/app-debug.apk" >> $GITHUB_OUTPUT

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/app-debug.apk

  release:
    name: Release build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: Build Release APK
        run: ./gradlew assembleRelease
      - name: Generate changelog
        id: changelog
        run: |
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          git log --pretty=format:'- %s (%h)' $(git describe --tags --abbrev=0 --tags `git rev-list --tags --max-count=1`^)..HEAD >> $GITHUB_OUTPUT
          echo "\nEOF" >> $GITHUB_OUTPUT
      - name: Upload Release APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: app/build/outputs/apk/release/app-release.apk

  deploy:
    name: Deploy to Firebase
    needs: build
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.release_notes != ''
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download APK artifact from build
        uses: actions/download-artifact@v4
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug

      - name: Upload Debug APK to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: app/build/outputs/apk/debug/app-debug.apk
          releaseNotes: ${{ github.event.inputs.release_notes }}
